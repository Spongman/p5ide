{"version":3,"sources":["sw.js"],"names":["verbose","self","addEventListener","event","console","log","waitUntil","skipWaiting","clients","claim","clientId","url","request","origin","location","startsWith","respondWith","Promise","resolve","reject","get","then","client","messageChannel","MessageChannel","port1","onmessage","data","status","response","Response","statusText","type","headers","postMessage","port2","catch"],"mappings":"AAAA,MAAMA,SAAU,EAEhBC,KAAKC,iBAAiB,UAAW,SAAUC,GAC/BC,QAAQC,IAAI,WACvBF,EAAMG,UAAUL,KAAKM,eACVH,QAAQC,IAAI,sBAGxBJ,KAAKC,iBAAiB,WAAY,SAAUC,GAChCC,QAAQC,IAAI,YACvBF,EAAMG,UAAUL,KAAKO,QAAQC,SAClBL,QAAQC,IAAI,uBAGxBJ,KAAKC,iBAAiB,QAASC,IAE9B,IAAKA,EAAMO,SACV,OAED,IAAIC,EAAMR,EAAMS,QAAQD,IAEpBE,EAASZ,KAAKa,SAASD,OACtBF,EAAII,WAAWF,IAKTT,QAAQC,IAAI,QAASM,GAEhCR,EAAMa,YAAY,IAAIC,QAAQ,CAACC,EAASC,KAEvClB,KAAKO,QAAQY,IAAIjB,EAAMO,UAAUW,KAAKC,IAE1BlB,QAAQC,IAAI,SAAUiB,GAEjC,IAAIC,EAAiB,IAAIC,eACzBD,EAAeE,MAAMC,UAAY,SAAUvB,GAE/BC,QAAQC,IAAI,YAAaF,GAEpC,IAAIwB,EAAOxB,EAAMwB,KACjB,GAAIA,GACH,GAAIA,EAAKC,OAAQ,CAChB,IAAIC,EAAW,IAAIC,SACnBD,EAASD,OAASD,EAAKC,OACvBC,EAASE,WAAaJ,EAAKI,YAAc,QACzCb,EAAQW,QACF,GAAIF,EAAKK,KAAM,CACrB,IAAIH,EAAW,IAAIC,SAASH,GAC5BE,EAASG,KAAOL,EAAKK,KACrBH,EAASI,QAAQ,gBAAkBN,EAAKK,KACxCH,EAASI,QAAQ,iBAAmB,WACpCf,EAAQW,QAEH,CACN,IAAIA,EAAW,IAAIC,SACnBD,EAASD,OAAS,IAClBC,EAASE,WAAa,WACtBb,EAAQW,KAIVP,EAAOY,YAAYvB,GAAMY,EAAeY,UAEtCC,MAAMjB,OAzCTf,QAAQC,IAAI,WAAaM","file":"sw.js","sourcesContent":["const verbose = true;\n\nself.addEventListener('install', function (event) {\n\tverbose && console.log('install');\n\tevent.waitUntil(self.skipWaiting());\n\tverbose && console.log('install complete');\n});\n\nself.addEventListener('activate', function (event) {\n\tverbose && console.log('activate');\n\tevent.waitUntil(self.clients.claim());\n\tverbose && console.log('activate complete');\n});\n\nself.addEventListener('fetch', event => {\n\n\tif (!event.clientId)\n\t\treturn;\n\n\tlet url = event.request.url;\n\n\tlet origin = self.location.origin;\n\tif (!url.startsWith(origin)) {\n\t\tconsole.log(\"REJECT: \" + url);\n\t\treturn;\n\t}\n\n\tverbose && console.log(\"FETCH\", url);\n\n\tevent.respondWith(new Promise((resolve, reject) => {\n\n\t\tself.clients.get(event.clientId).then(client => {\n\n\t\t\tverbose && console.log(\"CLIENT\", client);\n\n\t\t\tlet messageChannel = new MessageChannel();\n\t\t\tmessageChannel.port1.onmessage = function (event) {\n\n\t\t\t\tverbose && console.log(\"ONMESSAGE\", event);\n\n\t\t\t\tlet data = event.data;\n\t\t\t\tif (data) {\n\t\t\t\t\tif (data.status) {\n\t\t\t\t\t\tlet response = new Response();\n\t\t\t\t\t\tresponse.status = data.status;\n\t\t\t\t\t\tresponse.statusText = data.statusText || \"error\";\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t} else if (data.type) {\n\t\t\t\t\t\tlet response = new Response(data);\n\t\t\t\t\t\tresponse.type = data.type;\n\t\t\t\t\t\tresponse.headers[\"Content-Type\"] = data.type;\n\t\t\t\t\t\tresponse.headers[\"Cache-Control\"] = \"no-store\";\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet response = new Response();\n\t\t\t\t\tresponse.status = 404;\n\t\t\t\t\tresponse.statusText = \"baloney!\";\n\t\t\t\t\tresolve(response);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tclient.postMessage(url, [messageChannel.port2]);\n\n\t\t}).catch(reject);\n\n\t}));\n});"]}